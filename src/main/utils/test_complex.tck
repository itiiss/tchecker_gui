system:ProducerConsumerSystem{}

# --- Global Declarations ---
event:produce{}
event:consume{}
event:timeout_producer{}
event:timeout_consumer{}
clock:1:pt{}
clock:1:ct{}
int:1:0:3:0:buffer{}
int:1:0:10:0:produced{}
int:1:0:10:0:consumed{}

# --- Process Definitions ---

# Process: producer
process:producer{}
location:producer:Idle{initial::invariant:pt <= 5:labels:ready}
location:producer:Working{invariant:pt <= 3:labels:busy}
edge:producer:Idle:Working:produce{provided:pt >= 1 && buffer < 3:do:pt = 0}
edge:producer:Working:Idle:produce{provided:pt >= 2:do:produced = produced + 1, pt = 0}

# Process: consumer  
process:consumer{}
location:consumer:Idle{initial::invariant:ct <= 4:labels:ready}
location:consumer:Processing{invariant:ct <= 2:labels:busy}
edge:consumer:Idle:Processing:consume{provided:ct >= 1 && buffer > 0:do:ct = 0}
edge:consumer:Processing:Idle:consume{provided:ct >= 1:do:consumed = consumed + 1, ct = 0}

# Process: buffer
process:buffer{}
location:buffer:Empty{initial::labels:capacity_0}
location:buffer:Partial{labels:capacity_1_2}
location:buffer:Full{labels:capacity_3}
edge:buffer:Empty:Partial:produce{do:buffer = buffer + 1}
edge:buffer:Partial:Full:produce{provided:buffer < 3:do:buffer = buffer + 1}
edge:buffer:Partial:Empty:consume{provided:buffer == 1:do:buffer = buffer - 1}
edge:buffer:Full:Partial:consume{provided:buffer > 0:do:buffer = buffer - 1}

# --- Synchronizations ---